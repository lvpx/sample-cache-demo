# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  cross-os:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - if: ${{ runner.os == 'Windows' }} # Workaround required when using cache action across operating systems. See https://github.com/actions/cache/issues/591
      name: Use GNU tar not BSD tar
      shell: cmd
      run: |
        echo "Adding GNU tar to PATH"
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

    - uses: actions/checkout@v3
    # - name: Set up JDK
    #   id: setup_jdk
    #   uses: actions/setup-java@v3
    #   with:
    #     java-version: '18'
    #     distribution: 'temurin'
    #     cache: maven

    - name: Print tar version
      id: print_tar_version
      run: |
        tar --version
        zstd --version

    # - name: Cache Maven repository
    #   uses: actions/cache@v3
    #   id: cache_maven
    #   with:
    #     path: ~/.m2/repository
    #     key: ${{ github.run_number }}-cross-os-maven-key

    - name: Set up Python 
      uses: actions/setup-python@v4
      with:
        python-version: 3.10
    
    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get install unrar p7zip-full par2
    
    - name: Cache Python virtualenv
      uses: syphar/restore-virtualenv@v1.2
      id: cache-virtualenv
      with:
        custom_cache_key_element: "ci"
        requirement_files: |
          **/requirements.txt
          PKG-INFO